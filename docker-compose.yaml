version: "3.6"

services:
  base-static: &base-static
    build:
      dockerfile: config/docker/Dockerfile.assets
      context: .
    image: static:v1
    networks:
      - main
    environment:
      - STATIC_PATH=/app/static
    volumes:
      - ./roulette/src:/app/src

  base-app: &base-app
    build:
      dockerfile: config/docker/Dockerfile.app
      context: .
    image: app:v1
    networks:
      - main
    volumes:
      - ./:/app

  webpack:
    <<: *base-static
    stdin_open: true
    command: npm start

  admin:
    <<: *base-app
    command: [
        "python3.8",
        "-m",
        "SteamRoulette.admin",
        "--port",
        "5000",
        "--host",
        "0.0.0.0",
        "--config",
        "/app/config/config.yaml",
        "--debugger",
    ]

  celery:
    <<: *base-app
    command: [
        "python3.8",
        "-m",
        "SteamRoulette.tasks",
        "--queues=high,default",
        "--config",
        "/app/config/config.yaml",
        "--debugger",
    ]

  ssh: &ssh_base
    build:
      context: .
      dockerfile: config/docker/Dockerfile.ssh
    volumes:
      - ./:/app
    ports:
      - "5000"
      - "2000"
      - "1132:22"
    networks:
      main:
        aliases:
          - ssh
          - admin
    depends_on:
      - postgres
      - redis

  pgpatch:
    <<: *base-app
    volumes:
      - "./SteamRoulette/:/app/SteamRoulette"
      - "./apply_patches.py:/app/apply_patches.py"
      - "./config/:/app/config"
    entrypoint: python apply_patches.py --config="/app/config/config.yaml" -l INFO

  postgres:
    image: postgres:11.9-alpine
    ports:
      - "5433:5432"
    networks:
      main:
        aliases:
          - postgres
    env_file:
      - ./config/docker/envs/postgres.env
    volumes:
      - "./.volumes/pg/:/var/lib/postgresql/data/"

  redis:
    image: redis:6.0.9-alpine
    ports:
      - 6379:6379
    networks:
      main:
        aliases:
          - redis
    volumes:
      - "./.volumes/redis/:/data/"

  rabbitmq:
    image: rabbitmq:3.8.9-alpine
    ports:
      - 5672:5672
    networks:
      main:
        aliases:
          - rabbitmq
    volumes:
      - "./.volumes/redis/:/data/"

  nginx:
    image: nginx:1.14.0-alpine
    ports:
      - "5000:5000"
    volumes:
      - "./config/docker/nginx.conf:/etc/nginx/nginx.conf"
    networks:
      main:
        aliases:
          - nginx
    depends_on:
      - admin
      - webpack

networks:
  main:
    driver: bridge
